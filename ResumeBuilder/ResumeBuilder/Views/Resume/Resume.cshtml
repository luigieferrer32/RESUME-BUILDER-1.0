@model ResumeBuilder.ViewModel.PersonInfoVM


@using System.Web.Optimization

@Scripts.Render("~/Content/css")
@Scripts.Render("~/bundles/modernizr")
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width-device-width" />
    <h2>Register</h2>
</head>
<body>

    @using (Html.BeginForm("Resume", "Resume", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>User View Model</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "Text-danger" })


        <div class="form-group">
            <div class="col-s-10">
                @*@Html.EditorFor(model => model.USER_ID, new { htmlAttributes = new { @class = "form-control", @id = "txtUserID", @Value = @ViewBag.UserId, @type = "hidden" } })*@
                @*@Html.TextBoxFor(model => model.IDPers, new { @id = "txtUserID", @Value = @ViewBag.UserId, @type = "hidden" })*@
                @*@Html.ValidationMessageFor(model => model.USER_ID, "", new { @class = "text-danger" })*@
            </div>

        </div>
        <div class="container">
            <div class="row">
                <div class="form-group">
                    <label>First Name</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control", @id = "txtFirstname" } })
                        @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group">
                    <label>Last Name</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control", @id = "txtLastname" } })
                        @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    <label>Address</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Street_Address, new { htmlAttributes = new { @class = "form-control", @id = "txtAddress" } })
                        @Html.ValidationMessageFor(model => model.Street_Address, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <label>City</label><br />
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @id = "txtCity" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.State_Province, htmlAttributes: new { @class = "Control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.State_Province, new { htmlAttributes = new { @class = "form-control", @id = "txtProvince" } })
                        @Html.ValidationMessageFor(model => model.State_Province, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "Control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @id = "txtZipcode" } })
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email_Address, htmlAttributes: new { @class = "Control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email_Address, new { htmlAttributes = new { @class = "form-control", @id = "txtEmailAddress" } })
                        @Html.ValidationMessageFor(model => model.Email_Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "Control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control", @id = "txtZipcode" } })
                        @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                    </div>
                </div>


                <input type="submit" class="btn btn-info" style="position: relative; right: -76%;" value="Next Step>> Work Experience" />


            </div>
        </div>

    }
</body>
</html>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@Scripts.Render("~/js/Resume.js")
<script type="text/javascript">
    var UpdateInfoUrl = '@Url.Action("UpdateAssistance", "Resume")';
</script>